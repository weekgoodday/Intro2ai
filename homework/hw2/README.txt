作业说明：

0. 截止日期：

	2023年3月12日23:59

1. 环境要求：

	【C++】 11及以上，推荐g++编译器（Windows建议安装MinGW使用g++编译c++程序，安装方法详见5.补充材料）
	【Python】3.7及以上
	【编辑器】建议安装VSCode打开文件夹查看源代码（安装方法详见5.补充材料。为防止中文注释出现乱码，请使用UTF-8编码打开文件）

2. 常用命令：

	【C++编译】
		g++ [源代码文件名].cpp -o [输出文件名] --std=c++11 -O3
		注意测试时间时开优化-O3可以提升执行效率

	【执行Python脚本】
		python [文件名].py

	【将输出重定向到文件】
		[可执行文件名] > [输出目标文件名]
		上述执行方式需要使得工作目录在可执行文件所在的目录，否则应输入可执行文件名的绝对或相对路径
	
	【观察进程占用设备资源情况】
		Linux/MacOS:	top
		Windows任务管理器:	taskmgr

3. 样例代码：
	
	C++的代码目录下包含4个文件夹：algorithm, interface, problem, utils.
	【interface】
        包括其余文件夹下代码所依赖的各接口
        constraint_satisfaction.hpp定义了约束满足问题的接口，用于冲突最小化算法 
        population.hpp定义了种群的接口，用于遗传算法
		state_local.hpp定义了局部搜索的状态接口，用于爬山算法和模拟退火算法
        state.hpp定义了全局搜索的状态接口，可与其他建模方式对比，体会同一个问题的不同建模方式的区别
	【algorithm】
		包括实验涉及到的各种局部搜索算法
        conflicts_minimize.hpp：冲突最小化算法
        genetic.hpp：遗传算法
        hill_climb：爬山算法
        simulated_anneal：模拟退火算法
	【problem】
		包括n皇后问题的不同建模
        queens.hpp：将n皇后建模为全局搜索问题，逐行填皇后
        queens_move.hpp：将n皇后建模为局部搜索问题，初始每行给定一个皇后，动作为任意选择一行，将这行的皇后任意移动到该行的某一列
        queens_swap.hpp：将n皇后建模为局部搜索问题，初始每行给定一个皇后（这些皇后也处在不同列），动作为任意选择两行对换
        queens_constraint.hpp：将n皇后建模为约束满足问题，n个变元为每行皇后的列编号，约束为某个皇后和其他皇后不产生冲突
	【utils】
		包括其余文件夹下代码依赖的工具方法与工具类。
        random_variables.hpp：包含随机变量（整数、实数、随机排列），采用固定随机数种子，保证实验可复现
        selection.hpp：包含选择算法（轮盘赌选择、首个更优选择、最优选择）

	代码目录下包含 queens_conflict_minimize.cpp ，可编译/执行该文件，使用冲突最小化算法求解n皇后问题
	代码目录下包含 queens_genetic.cpp，可编译/执行该文件，使用遗传算法求解n皇后问题
	代码目录下包含 queens_hill_climb.cpp，可编译/执行该文件，使用爬山算法求解n皇后问题
	代码目录下包含 queens_simulated_anneal.cpp，可编译/执行该文件，使用模拟退火算法求解n皇后问题

	其中，queens_hill_climb.cpp和queens_simulated_anneal.cpp可以根据实际效果任意选择使用的问题模型（包括queens_swap.hpp / queens_move.hpp）来求解
	queens_genetic.cpp中实现了n皇后问题的种群，而后调用遗传算法迭代进化
	queens_conflict_minimize.cpp使用冲突最小化算法求解建模为约束满足问题的n皇后问题

4. 任务描述
	
	【**注意事项**】
		1. 下列任务中运行时间以上机课所在机房的计算机为准
		2. 若修改算法时，需要使用随机数，则应当使用utils/random_variables.hpp中的RandomVariables::uniform_int, ::uniform_real, ::uniform_permutation，以保证实验可复现
		3. 基准：爬山法n=100，模拟退火n=100，遗传算法n=20，冲突最小化n=1000. 
		4. 评分标准：爬山、退火、遗传、冲突最小化各算法均达到基准线可得6分，均超过基准线1.5倍可得7分，均超过基准线2倍可得8分。
			不限方法求解的n需要大于等于上述各算法得到的n，排名在全班10%以内可得2分，10%-20%可得1分。
		5. 下列各算法允许参照样例代码自行实现，但不应当改换算法（例如用模拟退火完成爬山法的习题），同时应当在报告中说明与样例算法的异同以及设计思路。

	【爬山法求解n皇后问题】
		调整参数后编译运行queens_hill_climb.cpp，尝试在5秒内求解n值尽可能大的n皇后问题（5秒内只需要找到1个解）
		要求：
			1. 需要尝试不同的皇后数目，来确定某套参数下算法能够在5秒内求解的最大皇后数
			2. 需要尝试调整queens_hill_climb.cpp中给出的各种参数，以在5秒内求解尽可能多的皇后
			3. 需要在报告中填写获得的最大n值，以及获得此值时参数的设置情况
			4. 如果对算法做了除参数之外的修改，需要在报告中详细说明
			5. 需要在报告中简要描述自己做出修改或者调参的思路
		提示：
			1. 可调整的参数包括问题模型（交换行QueensSwap还是移动皇后所在的列QueensMove）
			2. 可调整的参数包括随机重启尝试的次数，无论5秒内尝试多少次，只要能输出1个解即可
			3. 可调整的参数包括单次尝试最大爬山步数
			4. 可调整的参数包括选择算法（首个更优选择，最大选择，轮盘赌选择）
			5. 在使用轮盘赌选择算法决定转移到的邻居状态时，可以调整估值函数这个参数（其他选择算法无需调整），决定选择到的概率与估值的关系
			6*. 在使用轮盘赌算法选择邻居状态时，若改变估值函数，也需要相应地改变爬山法的目标估值（默认估值函数下为1.0），否则会输出错误的解或者不输出解
			
	【模拟退火求解n皇后问题】
		调整参数后编译运行queens_simulated_anneal.cpp，尝试在5秒内求解n值尽可能大的n皇后问题（5秒内只需要找到1个解）
		要求：
			1. 需要尝试不同的皇后数目，来确定某套参数下算法能够在5秒内求解的最大皇后数
			2. 需要尝试调整queens_simulated_anneal.cpp中给出的各种参数，以在5秒内求解尽可能多的皇后
			3. 需要在报告中填写获得的最大n值，以及获得此值时参数的设置情况
			4. 如果对算法做了除参数之外的修改，需要在报告中详细说明
			5. 需要在报告中简要描述自己做出修改或者调参的思路
		提示：
			1. 可调整的参数包括问题模型（交换行QueensSwap还是移动皇后所在的列QueensMove）
			2. 可调整的参数包括随机重启尝试的次数，无论5秒内尝试多少次，只要能输出1个解即可
			3. 可调整的参数包括温度随时间的变化函数，单次退火最大时间步数，退火终止时的最低温度，状态估值函数
			4*. 当调整状态估值函数时（默认估值函数为最大可能冲突数-当前状态冲突数，目标为最大冲突数），需要相应地调整目标值的大小，否则会输出错误的解或者不输出解

	【遗传算法求解n皇后问题】
		修改给出的queens_genetic.cpp，尝试在5秒内求解n值尽可能大的n皇后问题（5秒内只需要找到1个解）
		要求：
			1. 需要尝试不同的皇后数目，来确定遗传算法的某种实现下5秒内求解的最大皇后数
			2. 需要尝试调整queens_genetic.cpp中给出的各种参数，以在5秒内求解尽可能多的皇后
			3. 需要在报告中填写获得的最大n值，以及获得此值时参数的设置情况
			4. 如果对算法做了除参数之外的修改，需要在报告中详细说明
			5. 需要在报告中简要描述自己做出修改或者调参的思路
		提示：
			1. 可调整的参数包括进化代数，种群大小，变异概率
			2. 可以尝试修改n皇后问题种群类的实现（包括如何编码基因、如何交叉、如何变异等）
			3. 也可以自行实现Population接口，建立n皇后问题的种群类，来获得更好的效果
			4*. 如果修改了编码基因的方式，需要重新实现生成初始种群的功能
			5*. 算法默认会输出每一轮迭代中的所有成员，如果希望算法仅输出解需要自行修改
			6*. 算法会进化完要求的所有轮次，如果希望算法找到第一个解就停止运行需要自行修改
	
	【冲突最小化算法求解n皇后问题】
		修改给出的queens_conflict_minimize.cpp，尝试在5秒内求解n值尽可能大的n皇后问题（5秒内只需要找到1个解）
		要求：
			1. 需要尝试不同的皇后数目，来确定某套参数下算法能够在5秒内求解的最大皇后数
			2. 需要尝试调整queens_conflict_minimize.cpp中给出的各种参数，以在5秒内求解尽可能多的皇后
			3. 需要在报告中填写获得的最大n值，以及获得此值时参数的设置情况
			4. 如果对算法做了除参数之外的修改，需要在报告中详细说明
			5. 需要在报告中简要描述自己做出修改或者调参的思路
		提示：
			1. 可调整的参数包括尝试轮数，每轮最多改变变元次数，选择算法
			2. 如果使用轮盘赌选择算法，可以调整传入的估值函数（估值函数决定轮盘赌算法中具有某个冲突数的变元被选择修改的概率）
			3. 需要在报告中填写获得的最大n值，以及获得此值时参数的设置情况
			4. 如果对算法做了除参数之外的修改，需要在报告中详细说明
			5. 需要在报告中简要描述自己做出修改或者调参的思路
	
	【不限方法求解n皇后问题】
		不限制使用的算法，尝试在5秒内求解n值尽可能大的n皇后问题（5秒内只需要找到1个解）
		要求：
			1. 可以使用给出的任意一份算法样例代码修改调参，也可以自行实现（限c/c++/python3实现）
			2. 需要在报告填写获得的最大n值，并且详细说明自己使用的方法（可以直接用上面四个题中实现出的效果最好的算法）
			3. 需要在上机课时找自己的小班助教展示成果，并将自己获得的解存放到一个命名为[学号]_[姓名].txt的文件中，提交给小班助教。
			4. 在上机课展示后提交给小班助教的txt文件一共包含2行，第1行包含1个整数n，第2行包含n个整数，用单个空格隔开（范围为[0,n)），表示皇后在各行的位置。

5. 补充材料：

	【Python官方文档】
		https://docs.python.org/zh-cn/3/
    【MinGW安装】
        https://www.bbsmax.com/A/x9J2NDXVJ6/
    【VSCode安装】
        https://zhuanlan.zhihu.com/p/87864677/